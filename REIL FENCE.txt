

PYTHON CODE:

"""
Write a Java/C/C++/Python program to perform encryption and decryption using the method of
Transposition technique.Write a Java/C/C++/Python program to perform encryption and decryption using the method of
Transposition technique.
"""

INPUT:

import math 
  
key = "Sham"

def encryptMessage(msg): 
    cipher = "" 
    k_indx = 0
    msg_len = float(len(msg)) 
    msg_lst = list(msg) 
    key_lst = sorted(list(key)) 
  
    col = len(key) 
    row = int(math.ceil(msg_len / col)) 
  
    fill_null = int((row * col) - msg_len) 
    msg_lst.extend('_' * fill_null) 
  
    matrix = [msg_lst[i: i + col]  
              for i in range(0, len(msg_lst), col)] 
  
    for _ in range(col): 
        curr_idx = key.index(key_lst[k_indx]) 
        cipher += ''.join([row[curr_idx]  for row in matrix]) 
        k_indx += 1
    return cipher 
 
def decryptMessage(cipher): 
    msg = "" 
    k_indx = 0

    msg_indx = 0
    msg_len = float(len(cipher)) 
    msg_lst = list(cipher) 
  
    col = len(key) 
      
    row = int(math.ceil(msg_len / col)) 
  
    key_lst = sorted(list(key)) 
  
    dec_cipher = [] 
    for _ in range(row): 
        dec_cipher += [[None] * col] 
  
    for _ in range(col): 
        curr_idx = key.index(key_lst[k_indx]) 
  
        for j in range(row): 
            dec_cipher[j][curr_idx] = msg_lst[msg_indx] 
            msg_indx += 1
        k_indx += 1
  
    try: 
        msg = ''.join(sum(dec_cipher, [])) 
    except TypeError: 
        raise TypeError("This program cannot", 
                        "handle repeating words.") 
  
    null_count = msg.count('_') 
  
    if null_count > 0: 
        return msg[: -null_count] 
  
    return msg 

msg = input("Enter String: ")
cipher = encryptMessage(msg) 
print("Encrypted Message: {}".format(cipher))  
print("Decryped Message: {}".format(decryptMessage(cipher))) 

OUTPUT:

PS C:\Users\Dell\Desktop\ast 3> python -u "c:\Users\Dell\Documents\tempCodeRunnerFile.py"
Enter String: sham mane
Encrypted Message: s eaa_hm_mn_
Decryped Message: sham mane


C CODE:

INPUT:

#include<stdio.h>
int check(int x,int y)
{
int a,b,c;
if(x%y==0)
return 0;
a=x/y;
b=y*(a+1);
c=b-x;
return c;
}
 void main()
{
int l1,i,d,j;
printf("\nEnter the length of the key. ");
scanf("%d",&l1);
int sequence[l1];
printf("\nEnter the sequence key. ");
for(i=0;i<l1;++i)
{
scanf("%d",&sequence[i]);
}
int order[l1];
for(i=1;i<=l1;++i)
{
for(j=0;j<l1;++j)
{
if(sequence[j]==i)
order[i-1]=j;
}
}
printf("\nEnter the depth. ");
scanf("%d",&d);
int l2;
printf("\nEnter the length of String without spaces . ");
scanf("%d",&l2);
int temp1=check(l2,l1);
int r=(l2+temp1)/l1;
char p[l2+temp1];
char p1[r][l1];
//char p2[r][l1];
if(temp1>0)
printf("\nYou need to enter %d bogus characters.So enter total %d characters. ",temp1,(l2+temp1));
else
printf("\nEnter the string. ");
for(i=-1;i<(l2+temp1);++i)
{
scanf("%c",&p[i]);
}
int count=0;
while(d>0)
{
count=0;
for(i=0;i<r;++i)
{
for(j=0;j<l1;++j)
{
p1[i][j]=p[count];
count=count+1;
}
}
printf("\n\n\n");
for(i=0;i<r;++i)
{
for(j=0;j<l1;++j)
{
printf("%c ",p1[i][j]);
}
printf("\n");
}
count=0;
for(i=0;i<l1;++i)
{
for(j=0;j<r;++j)
{
p[count]=p1[j][order[i]];
count=count+1;
}
}
for(i=0;i<(l2+temp1);++i)
printf("%c ",p[i]);
d=d-1;
}
}


OUTPUT:

Enter the length of the key. 2

Enter the sequence key. 2 1

Enter the depth. 2

Enter the length of String without spaces . 7

You need to enter 1 bogus characters.So enter total 8 characters. SINHGADx



S I 
N H
G A
D x
I H A x S N G D


I H
A x
S N
G D
H x N D I A S G

